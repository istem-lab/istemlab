name: Publish and Deploy Docker Images
on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  FRONTEND_IMAGE: istemlab-frontend:latest
  BACKEND_IMAGE: istemlab-backend:latest

jobs:
  publish:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.PAT }}" | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ env.REGISTRY }}/istem-lab/${{ env.FRONTEND_IMAGE }} ./frontend
          docker push ${{ env.REGISTRY }}/istem-lab/${{ env.FRONTEND_IMAGE }}

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ env.REGISTRY }}/istem-lab/${{ env.BACKEND_IMAGE }} ./backend
          docker push ${{ env.REGISTRY }}/istem-lab/${{ env.BACKEND_IMAGE }}

  deploy:
    needs: publish
    name: Deploy to VPS
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Host deploy_host
            HostName ${{ secrets.SSH_HOST }}
            User ${{ secrets.SSH_USER }}
            Port ${{ secrets.SSH_PORT }}
            StrictHostKeyChecking no
            IdentityFile ~/.ssh/id_rsa" > ~/.ssh/config
          chmod 600 ~/.ssh/config
          
      - name: Connect and Pull New Images
        run: |
          ssh deploy_host "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d"